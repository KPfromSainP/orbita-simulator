<?xml version="1.0" encoding="utf-8"?>
<v:probe name="Test1-Template" xmlns:v="venus">
<flight>
<tournament>tournament</tournament>
<planet name="Earth"/>
<time start="2015-01-01 00:00:00"/>
<T_start>290.000000</T_start>
<mission type="test1">
<control_stations>
        <control_station name="GS1">
                <location_angle>0</location_angle>
        </control_station>
</control_stations>
<duration>0</duration>
<orbit>0</orbit>
<start_angular_velocity>1.000000</start_angular_velocity>
</mission>
</flight>
<construction>
  <fuel>0.000000</fuel>
  <voltage>15.000000</voltage>
  <xz_yz_solar_panel_fraction>0</xz_yz_solar_panel_fraction>
  <xz_yz_radiator_fraction>0</xz_yz_radiator_fraction>
  <xy_radiator_fraction>0</xy_radiator_fraction>
</construction>
<systems>
<system name="Cubesat-Case-1U"/>
<system name="Orient-1" start_mode="ON"/>
<system name="Telemetry-2" start_mode="ON"/>
<system name="Navi-1" start_mode="ON"/>
<system name="Power-1" start_mode="ON"/>
<system name="Therm-1" start_mode="ON"/>
<system name="CPU-1" start_mode="ON">
<program>
<![CDATA[t = # ВРЕМЯ РАБОТЫ МАХОВИКА
w = # КОНЕЧНАЯ УГЛОВАЯ СКОРОСТЬ
M0 = # МОМЕНТ
M = 0.000001
dw = 0.00001

mode = 'rotate'
sputnik.orientation.set_motor_moment(AXIS_Z, M0);
sputnik.orientation.start_motor(AXIS_Z);
moment = True

while sputnik.cpu.run():

    if mode == 'rotate' and sputnik.cpu.get_flight_time() >= t: 
        mode = 'ok'
        sputnik.orientation.stop_motor(AXIS_Z)
        moment = False

    if mode == 'ok':
        av = sputnik.orientation.get_angular_velocity(AXIS_Z)
        if abs(av - w) < dw:
            if moment:
                sputnik.orientation.stop_motor(AXIS_Z)
                moment = False
        else:
            if not moment:
                sputnik.orientation.start_motor(AXIS_Z)
                moment = True
            if av > w:
                sputnik.orientation.set_motor_moment(AXIS_Z, -M)
            else:
                sputnik.orientation.set_motor_moment(AXIS_Z, M)
]]></program>
</system>
</systems>
</v:probe>
